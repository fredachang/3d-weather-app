/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 door.gltf -T -types
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    door_frame_1: THREE.Mesh;
    top_mirror_1: THREE.Mesh;
    bottom_mirro_1: THREE.Mesh;
    door_frame001_1: THREE.Mesh;
    top_mirror001_1: THREE.Mesh;
    bottom_mirro001_1: THREE.Mesh;
    door_frame: THREE.Mesh;
    top_mirror: THREE.Mesh;
    bottom_mirro: THREE.Mesh;
    door_frame001: THREE.Mesh;
    top_mirror001: THREE.Mesh;
    bottom_mirro001: THREE.Mesh;
  };
  materials: {
    ["steel door"]: THREE.MeshStandardMaterial;
    glass: THREE.MeshPhysicalMaterial;
  };
};

export function Door(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/door-transformed.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group position={[1.97, 0, 0]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.door_frame_1.geometry}
          material={materials["steel door"]}
          position={[0, -1.55, -0.05]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.top_mirror_1.geometry}
          material={materials.glass}
          position={[0, 0.95, -0.03]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.bottom_mirro_1.geometry}
          material={materials.glass}
          position={[0, -0.85, -0.03]}
        />
      </group>
      <group position={[6.19, 0, 0]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.door_frame001_1.geometry}
          material={materials["steel door"]}
          position={[-2.11, -1.55, 0]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.top_mirror001_1.geometry}
          material={materials.glass}
          position={[-2.11, 0.95, -0.02]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.bottom_mirro001_1.geometry}
          material={materials.glass}
          position={[-2.11, -0.85, -0.02]}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.door_frame.geometry}
        material={materials["steel door"]}
        position={[0, -1.55, -0.05]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.top_mirror.geometry}
        material={materials.glass}
        position={[0, 0.95, -0.03]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.bottom_mirro.geometry}
        material={materials.glass}
        position={[0, -0.85, -0.03]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.door_frame001.geometry}
        material={materials["steel door"]}
        position={[-2.11, -1.55, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.top_mirror001.geometry}
        material={materials.glass}
        position={[-2.11, 0.95, -0.02]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.bottom_mirro001.geometry}
        material={materials.glass}
        position={[-2.11, -0.85, -0.02]}
      />
    </group>
  );
}

useGLTF.preload("/door-transformed.glb");
