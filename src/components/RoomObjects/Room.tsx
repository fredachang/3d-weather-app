/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 Room.gltf --transform -types
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    door_frame_1: THREE.Mesh;
    top_mirror_1: THREE.Mesh;
    bottom_mirro_1: THREE.Mesh;
    door_frame001_1: THREE.Mesh;
    top_mirror001_1: THREE.Mesh;
    bottom_mirro001_1: THREE.Mesh;
    Cube: THREE.Mesh;
    door_frame: THREE.Mesh;
    top_mirror: THREE.Mesh;
    bottom_mirro: THREE.Mesh;
    door_frame001: THREE.Mesh;
    top_mirror001: THREE.Mesh;
    bottom_mirro001: THREE.Mesh;
  };
  materials: {
    ["main door baked"]: THREE.MeshStandardMaterial;
    glass: THREE.MeshPhysicalMaterial;
    ["side door baked"]: THREE.MeshStandardMaterial;
    ["Concrete.002"]: THREE.MeshStandardMaterial;
  };
};

export function Room(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/Room-transformed.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group position={[1.43, 0, 0]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.door_frame_1.geometry}
          material={materials["main door baked"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.top_mirror_1.geometry}
          material={materials.glass}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.bottom_mirro_1.geometry}
          material={materials.glass}
        />
      </group>
      <group position={[4.47, 0, 0]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.door_frame001_1.geometry}
          material={materials["side door baked"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.top_mirror001_1.geometry}
          material={materials.glass}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.bottom_mirro001_1.geometry}
          material={materials.glass}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube.geometry}
        material={materials["Concrete.002"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.door_frame.geometry}
        material={materials["main door baked"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.top_mirror.geometry}
        material={materials.glass}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.bottom_mirro.geometry}
        material={materials.glass}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.door_frame001.geometry}
        material={materials["side door baked"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.top_mirror001.geometry}
        material={materials.glass}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.bottom_mirro001.geometry}
        material={materials.glass}
      />
    </group>
  );
}

useGLTF.preload("/Room-transformed.glb");
